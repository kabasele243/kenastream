{
  "Resources": {
    "kenastreamF539B274": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "kenastream"
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Resource"
      }
    },
    "kenastreamCloudWatchRole2D0E5099": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/CloudWatchRole/Resource"
      }
    },
    "kenastreamAccount4DB8C794": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "kenastreamCloudWatchRole2D0E5099",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "kenastreamF539B274"
      ],
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Account"
      }
    },
    "kenastreamDeployment5957A571c0cea4211d7740214b3a4307b13fa4bc": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "kenastreamF539B274"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "kenastreamorderPOST65A74536",
        "kenastreamorderC880630C"
      ],
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Deployment/Resource"
      }
    },
    "kenastreamDeploymentStageprod685F9D81": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "kenastreamF539B274"
        },
        "DeploymentId": {
          "Ref": "kenastreamDeployment5957A571c0cea4211d7740214b3a4307b13fa4bc"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "kenastreamAccount4DB8C794"
      ],
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/DeploymentStage.prod/Resource"
      }
    },
    "kenastreamorderC880630C": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "kenastreamF539B274",
            "RootResourceId"
          ]
        },
        "PathPart": "order",
        "RestApiId": {
          "Ref": "kenastreamF539B274"
        }
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Default/order/Resource"
      }
    },
    "kenastreamorderPOSTApiPermissionKenastreamStackkenastream32ACE4BAPOSTorderD9546AD2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "orderLambdaEB698801",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "kenastreamF539B274"
              },
              "/",
              {
                "Ref": "kenastreamDeploymentStageprod685F9D81"
              },
              "/POST/order"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Default/order/POST/ApiPermission.KenastreamStackkenastream32ACE4BA.POST..order"
      }
    },
    "kenastreamorderPOSTApiPermissionTestKenastreamStackkenastream32ACE4BAPOSTorder62062A69": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "orderLambdaEB698801",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "kenastreamF539B274"
              },
              "/test-invoke-stage/POST/order"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Default/order/POST/ApiPermission.Test.KenastreamStackkenastream32ACE4BA.POST..order"
      }
    },
    "kenastreamorderPOST65A74536": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "kenastreamorderC880630C"
        },
        "RestApiId": {
          "Ref": "kenastreamF539B274"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "orderLambdaEB698801",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/kenastream/Default/order/POST/Resource"
      }
    },
    "orderLambdaServiceRole34EA9F14": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/orderLambda/ServiceRole/Resource"
      }
    },
    "orderLambdaEB698801": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "0ed45c9c3f114001fff3be7670a1f86121cdf56037821f690f7ed572aaa41606.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "orderLambdaServiceRole34EA9F14",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "orderLambdaServiceRole34EA9F14"
      ],
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/orderLambda/Resource",
        "aws:asset:path": "asset.0ed45c9c3f114001fff3be7670a1f86121cdf56037821f690f7ed572aaa41606",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQ207DMAyGn2X3qWGA4Lob4o6DxgNUWWI6t01S1QnTVPXdcRYmxtX/+fdRvoP1A9yu9JErY/tqoD3Mn1GbXonVzHqkVkc86hPMO+RYj6S2X/4Ka2NC8lE94ziEk0NBca8imdZi9gpIa0iTwY3mv+B3ZuFXjIdgs1VoUaSdrA9DqRNd1KDd3mqYxfjAyREzBZ/TL8mbKHwpaXyw2DG8neWSVXzfaGaMDHUWiWGTTI8x37XkQe8pjimqczqfTr79d6bwNnhLZVneAh3ffMs710/wuOqYqJrkM+QQdkV/APOEihttAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "KenastreamStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "kenastreamEndpointE7304879": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "kenastreamF539B274"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "kenastreamDeploymentStageprod685F9D81"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}